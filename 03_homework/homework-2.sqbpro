<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/namraschazil/Downloads/farmersmarket (1).db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3698"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,18:maincustomer_purchases"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="booth" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="101"/><column index="3" value="300"/><column index="4" value="68"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="119"/><column index="3" value="116"/><column index="4" value="78"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customer_purchases" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="65"/><column index="2" value="60"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="51"/><column index="6" value="148"/><column index="7" value="96"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT * FROM customer;
SELECT * FROM customer ORDER BY customer_last_name,  customer_first_name
LIMIT 10;
SELECT</sql><sql name="homework_2.sql">--SELECT
/* 1. Write a query that returns everything in the customer table. */

SELECT * FROM customer;

/* 2. Write a query that displays all of the columns and 10 rows from the cus- tomer table, 
sorted by customer_last_name, then customer_first_ name. */

SELECT * FROM customer ORDER BY customer_last_name,  customer_first_name
LIMIT 10;


--WHERE
/* 1. Write a query that returns all customer purchases of product IDs 4 and 9. */
-- option 1
SELECT * FROM customer_purchases
WHERE product_id = 4 AND  9;
-- option 2
SELECT * FROM customer_purchases
WHERE product_id IN ( '4','9');

/*2. Write a query that returns all customer purchases and a new calculated column 'price' (quantity * cost_to_customer_per_qty), 
filtered by vendor IDs between 8 and 10 (inclusive) using either:
	1.  two conditions using AND
	2.  one condition using BETWEEN
*/
-- option 1

SELECT 
customer_id,
product_id,
quantity,
cost_to_customer_per_qty,  (quantity*cost_to_customer_per_qty) as price
FROM customer_purchases
WHERE vendor_id &gt;=8 AND vendor_id &lt;=10



-- option 2
SELECT 
customer_id,
product_id,
quantity,
 (quantity*cost_to_customer_per_qty) as price
FROM customer_purchases
WHERE vendor_id BETWEEN 8 AND 10;

--CASE
/* 1. Products can be sold by the individual unit or by bulk measures like lbs. or oz. 
Using the product table, write a query that outputs the product_id and product_name
columns and add a column called prod_qty_type_condensed that displays the word “unit” 
if the product_qty_type is “unit,” and otherwise displays the word “bulk.” */

SELECT product_id, product_name
,CASE
WHEN product_qty_type = 'unit' then 'unit'
ELSE 'bulk'
end as product_qty_type_condensed
FROM
product


/* 2. We want to flag all of the different types of pepper products that are sold at the market. 
add a column to the previous query called pepper_flag that outputs a 1 if the product_name 
contains the word “pepper” (regardless of capitalization), and otherwise outputs 0. */

SELECT product_name
,CASE
when lower(product_name) like '%pepper%' THEN 1
else 0
end as pepper_flag
from product

--JOIN
/* 1. Write a query that INNER JOINs the vendor table to the vendor_booth_assignments table on the 
vendor_id field they both have in common, and sorts the result by vendor_name, then market_date. */

SELECT *
from vendor
inner join vendor_booth_assignments on vendor.vendor_id = vendor_booth_assignments.vendor_id
order by vendor.vendor_name, vendor_booth_assignments.market_date
</sql><current_tab id="1"/></tab_sql></sqlb_project>
